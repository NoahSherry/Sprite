<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABjAGQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        GhGIl+lVdd1y38PWa3F3cQ2tuZY4mllbaiF3VASfTLD39ATxVqI4iX6V82/trePvEXiHUbHwT4ft76Kx
        v5bf7ZqtrHu23AmLrbb84Rh5SserfMvTBB483x0cHh5Vpb7L1e39dj+7uIM0jl+BqYhu0rNR/wATWmnr
        q/JG98Pv2oj8Rv2lbvwHd2+oeF5prVrvThrkDaPPeRhWKtHDOodyzIQCxVcAjBYFR6RJq9zZWMcenx+I
        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
</value>
  </data>
</root>